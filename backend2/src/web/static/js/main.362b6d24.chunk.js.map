{"version":3,"sources":["functions/useLocalStorage.js","Pages/HomePage.js","functions/useSearchParams.js","functions/config.js","functions/useToggle.js","entity/GameState.js","Pages/TheGamePage.js","App.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","setItem","stringify","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","removeItem","HomePage","userName","setUserName","gameKey","setGameKey","startGameDisabled","length","joinGameDisabled","history","useHistory","params","location","useLocation","URLSearchParams","search","useSearchParams","useEffect","get","Container","maxWidth","AppBar","position","Toolbar","style","display","Typography","variant","flex","textAlign","Grid","container","spacing","marginTop","xs","TextField","label","fullWidth","autoFocus","onChange","event","target","Button","color","disabled","onClick","push","SocketEvents","useToggle","setValue","toggleValue","optionalValue","prev","socket","GameState","LOBBY","STARTING","IN_PROGRESS","TIME_UP","Layout","children","TheGamePage","userId","deleteGameKey","game","setGame","handleLeaveGame","disconnect","io","path","on","emit","alert","gameUpdate","handleReturnToLobby","gameState","state","LobbyScreen","handleStartGame","CountdownScreen","GamePlayScreen","GameOverScreen","paddingTop","paddingBottom","url","protocol","host","copy","players","map","player","online","socketIds","id","Chip","name","locations","Card","height","CardContent","top","bottom","timer","locationString","spyId","showLocation","toggleShowLocation","Array","fill","TogglingCard","title","active","toggleActive","opacity","ButtonBase","width","App","CssBaseline","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.362b6d24.chunk.js","sourcesContent":["import { useState } from 'react';\n\n// Hook\nfunction useLocalStorage(key, initialValue) {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n        try {\n            // Get from local storage by key\n            const item = window.localStorage.getItem(key);\n            // Parse stored json or if none return initialValue\n            if (item) {\n                return JSON.parse(item)\n            } else {\n                window.localStorage.setItem(key, JSON.stringify(initialValue));\n                return initialValue;\n            }\n        } catch (error) {\n            // If error also return initialValue\n            console.log(error);\n            return initialValue;\n        }\n    });\n\n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = value => {\n        try {\n            // Allow value to be a function so we have same API as useState\n            const valueToStore =\n                value instanceof Function ? value(storedValue) : value;\n            // Save state\n            setStoredValue(valueToStore);\n            // Save to local storage\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\n        } catch (error) {\n            // A more advanced implementation would handle the error case\n            console.log(error);\n        }\n    };\n\n    const removeValue = () => {\n        try {\n            window.localStorage.removeItem(key);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    return [storedValue, setValue, removeValue];\n}\n\nexport default useLocalStorage\n","import React, {useEffect, useState} from 'react'\nimport useLocalStorage from \"../functions/useLocalStorage\";\nimport {useHistory} from 'react-router-dom'\nimport { uuid } from \"uuidv4\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport useSearchParams from \"../functions/useSearchParams\";\n\nexport default function HomePage() {\n\n    const [userName, setUserName] = useLocalStorage(\"userName\", \"\")\n    const [gameKey, setGameKey] = useLocalStorage(\"gameKey\", \"\")\n\n    const startGameDisabled = !userName || gameKey.length > 0;\n    const joinGameDisabled = !userName || gameKey.length < 4;\n\n    const history = useHistory();\n    const params = useSearchParams();\n\n    useEffect(() => {\n        if (!!params.get('gameKey')) {\n            setGameKey(params.get('gameKey'))\n        }\n    }, [])\n\n    const handleStartNewGame = () => {\n        setGameKey('NEW')\n        history.push('/game')\n    }\n\n    const handleJoinGame = () => {\n        if (joinGameDisabled) return;\n        history.push('/game')\n    }\n\n    return (\n        <Container maxWidth={'md'}>\n            <AppBar position={\"fixed\"}>\n                <Toolbar style={{display: 'flex'}}>\n                    <Typography variant=\"h6\" style={{flex: 1, textAlign: 'center'}}>\n                        Interrogate the Intruder\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Toolbar/>\n            <Grid container spacing={2} style={{marginTop: 8}}>\n                <Grid item xs={12}>\n                    <Typography variant={'h6'}>Who are you?</Typography>\n                    <TextField label=\"Name\" fullWidth autoFocus value={userName} onChange={event => setUserName(event.target.value)} />\n                </Grid>\n                <Grid item xs={12}>\n                    <Typography variant={'h6'}>Join an existing game</Typography>\n                    <TextField label=\"Game Code\" fullWidth value={gameKey} onChange={event => setGameKey(event.target.value)} />\n                </Grid>\n                <Grid item xs={12}>\n                    <Button variant={\"outlined\"} color={\"primary\"} fullWidth disabled={joinGameDisabled} onClick={handleJoinGame}>Join Game</Button>\n                </Grid>\n                <Grid item xs={12}>\n                    <Button variant={\"outlined\"} fullWidth disabled={startGameDisabled} onClick={handleStartNewGame}>New Game</Button>\n                </Grid>\n            </Grid>\n        </Container>\n    )\n}\n","import { useLocation } from 'react-router-dom'\n\nexport default function useSearchParams() {\n  const location = useLocation()\n  const params = new URLSearchParams(location.search)\n  return params\n}\n","const SOCKET_URL = \"/\"\nconst SocketEvents = {\n        CONNECT: \"connect\",\n        CONNECTION: \"connection\",\n        JOIN_GAME: \"join\",\n        // CAST_VOTE: \"CAST_VOTE\",\n        // CHANGE_QUESTION: \"CHANGE_QUESTION\",\n        // FINISH_QUESTION: \"FINISH_QUESTION\",\n        // LEAVE_GAME: \"LEAVE_GAME\",\n        GAME_UPDATE: \"GAME_UPDATE\",\n        // UPDATE_SCORE: \"UPDATE_SCORE\",\n        // RESET_GAME: \"RESET_GAME\",\n        // END_GAME: \"END_GAME\",\n        CHANGE_STATE: 'CHANGE_STATE',\n    }\n;\n\nexport {SOCKET_URL, SocketEvents}\n","import {useState} from \"react\";\n\nexport default function useToggle(initialValue = false) {\n\n    const [value, setValue] = useState(initialValue);\n\n    const toggleValue = (optionalValue) => {\n        if (typeof optionalValue === \"boolean\") {\n            setValue(optionalValue)\n        } else {\n            setValue(prev => !prev);\n        }\n    }\n\n    return [value, toggleValue]\n}\n","const GameState = {\n    LOBBY: 'LOBBY',\n    STARTING: \"STARTING\",\n    IN_PROGRESS: 'IN_PROGRESS', TIME_UP: \"TIME_UP\"\n\n}\n\nexport default GameState\n","import React, {useEffect, useState} from 'react'\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport useLocalStorage from \"../functions/useLocalStorage\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {useHistory} from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport {SOCKET_URL, SocketEvents} from \"../functions/config\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Button from \"@material-ui/core/Button\";\nimport useToggle from \"../functions/useToggle\";\nimport GameState from \"../entity/GameState\";\nimport {CardContent} from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport copy from 'copy-to-clipboard';\n\nlet socket;\n\nfunction Layout({children}) {\n    return (\n        <>\n            <AppBar position={\"fixed\"}>\n                <Toolbar style={{display: 'flex'}}>\n                    <Typography variant=\"h6\" style={{flex: 1, textAlign: 'center'}}>\n                        Interrogate the Intruder\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <Toolbar/>\n            {children}\n        </>\n    )\n}\n\nexport default function TheGamePage() {\n\n    const [userName] = useLocalStorage(\"userName\")\n    const [userId] = useLocalStorage(\"userId\")\n    const [gameKey, setGameKey, deleteGameKey] = useLocalStorage(\"gameKey\")\n\n    const [game, setGame] = useState(null)\n\n    const history = useHistory();\n\n    const handleLeaveGame = () => {\n        socket.disconnect();\n        deleteGameKey();\n        history.push('/')\n    };\n\n    useEffect(() => {\n        if (game) setGameKey(game.gameKey)\n    }, [game, setGameKey])\n\n    useEffect(() => {\n        if (!userId && !userName) handleLeaveGame();\n\n        socket = io(SOCKET_URL, {path: \"/api/socket.io\"});\n\n        socket.on(SocketEvents.CONNECT, () => {\n            console.log('joining game', {userId, userName, gameKey})\n            socket.emit(SocketEvents.JOIN_GAME, {userId, userName, gameKey}, ({error}) => {\n                if (error) {\n                    alert(error);\n                    handleLeaveGame();\n                }\n            });\n        });\n\n        socket.on(SocketEvents.GAME_UPDATE, (gameUpdate) => {\n            setGame(gameUpdate);\n        });\n\n        return () => {\n            socket.disconnect();\n        };\n    }, [userId, userName, gameKey]);\n\n    const [showDebug, toggleDebug] = useToggle(false)\n    const Debug = () => (\n        <div style={{position: 'absolute', bottom: 60}}>\n            {showDebug && (\n                <pre>\n                {JSON.stringify(game, null, 2)}\n            </pre>\n            )}\n            <button onClick={toggleDebug}>{showDebug ? 'hide' : 'show'} debug</button>\n        </div>\n    )\n\n    const handleStartGame = () => {\n        socket.emit(SocketEvents.CHANGE_STATE, {gameKey, gameState: GameState.STARTING})\n    }\n\n    const handleReturnToLobby = () => {\n        socket.emit(SocketEvents.CHANGE_STATE, {gameKey, gameState: GameState.LOBBY})\n    }\n\n    return (\n        <Layout>\n            {/*<ScreenSwitch game={game}/>*/}\n            {game?.state === GameState.LOBBY && (\n                <LobbyScreen gameKey={gameKey} game={game} userName={userName}\n                             handleLeaveGame={handleLeaveGame}\n                             handleStartGame={handleStartGame}/>\n            )}\n            {game?.state === GameState.STARTING && (\n                <CountdownScreen game={game}/>\n            )}\n            {game?.state === GameState.IN_PROGRESS && (\n                <GamePlayScreen game={game} handleReturnToLobby={handleReturnToLobby}/>\n            )}\n            {game?.state === GameState.TIME_UP && (\n                <GameOverScreen game={game} handleReturnToLobby={handleReturnToLobby}/>\n            )}\n            {/*<Debug/>*/}\n        </Layout>\n    )\n}\n\nfunction LobbyScreen({gameKey, game, userName, handleLeaveGame, handleStartGame}) {\n\n    const handleCopyGameLink = () => {\n        const url = `${window.location.protocol}//${window.location.host}?gameKey=${gameKey}`\n        copy(url)\n    }\n\n    return (\n        <>\n            <Container maxWidth={'md'} style={{paddingTop: 16, paddingBottom: 16}}>\n                <Grid container spacing={1} style={{marginTop: 8}}>\n                    <Grid item xs={12}>\n                        <Typography variant={'h4'}>Welcome, Agent {userName}</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button onClick={handleCopyGameLink}>Game Code: {gameKey}</Button>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant={'h5'}>Players</Typography>\n                    </Grid>\n                    {game?.players?.map(player => {\n                        const online = player.socketIds.length > 0;\n                        return (\n                            <Grid item key={player.id}>\n                                <Chip label={player.name} color={online ? \"primary\" : \"default\"}/>\n                            </Grid>\n                        )\n                    })}\n                    <Grid item xs={12}>\n                        <Typography variant={'h5'}>Locations</Typography>\n                    </Grid>\n                    {game?.locations?.map(location => (\n                        <Grid item xs={6} key={location}>\n                            <Card style={{height: '100%'}}>\n                                <CardContent>\n                                    <Typography variant={'h6'}>{location}</Typography>\n                                </CardContent>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Container>\n            <Toolbar/>\n            <AppBar position={\"fixed\"} style={{top: 'auto', bottom: 0}} color={'white'}>\n                <Toolbar style={{display: 'flex'}}>\n                    <Button style={{flex: 1}} onClick={handleLeaveGame}>Leave Game</Button>\n                    <Button style={{flex: 1}} color={'primary'} variant={'contained'} onClick={handleStartGame}>Start\n                        Game</Button>\n                </Toolbar>\n            </AppBar>\n        </>\n    )\n}\n\nfunction CountdownScreen({game}) {\n    return (\n        <>\n            <Container maxWidth={'md'} style={{paddingTop: 16, paddingBottom: 16}}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Typography variant={'h4'} style={{textAlign: 'center'}}>Game starting in...</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant={'h1'} style={{textAlign: 'center'}}>{game.timer}</Typography>\n                    </Grid>\n                </Grid>\n            </Container>\n        </>\n    )\n}\n\nfunction GamePlayScreen({game, handleReturnToLobby}) {\n\n    const [userId] = useLocalStorage(\"userId\")\n\n    const locationString = game.spyId === userId ? \"???\" : game.location;\n\n    const [showLocation, toggleShowLocation] = useToggle(false);\n\n    const [locationToggle, setLocationToggle] = useState(new Array(game.locations.length).fill(1))\n    const toggleLocation = locationIndex => {\n        setLocationToggle(prev => {\n            prev[locationIndex] = !prev[locationIndex]\n            return prev;\n        })\n    }\n\n    return (\n        <>\n            <Container maxWidth={\"md\"} style={{paddingTop: 16, paddingBottom: 16}}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Typography variant={'h5'}>Timer: {game.timer}</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant={'h5'}>Location: <Button\n                            onClick={toggleShowLocation}>{showLocation ? locationString : \"Tap To Show\"}</Button></Typography>\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <Typography variant={'h5'}>Locations</Typography>\n                    </Grid>\n                    {game?.locations?.map((location) => (\n                        <Grid item xs={6} key={location}>\n                            <TogglingCard title={location}/>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Container>\n            <Toolbar/>\n            <AppBar position={\"fixed\"} style={{top: 'auto', bottom: 0}} color={'white'}>\n                <Toolbar style={{display: 'flex'}}>\n                    <div style={{flex: 1}}></div>\n                    <Button style={{flex: 1}} color={'error'} variant={'contained'}\n                            onClick={handleReturnToLobby}>End</Button>\n                </Toolbar>\n            </AppBar>\n        </>\n    )\n}\n\nfunction TogglingCard({title}) {\n\n    const [active, toggleActive] = useToggle(true)\n\n    return (\n        <Card style={{height: '100%', opacity: active ? 1.0 : 0.3}}>\n            <ButtonBase onClick={toggleActive} style={{width: '100%'}}>\n                <CardContent>\n                    <Typography variant={'h6'}>{title}</Typography>\n                </CardContent>\n            </ButtonBase>\n        </Card>\n    )\n}\n\nfunction GameOverScreen({game, handleReturnToLobby}) {\n    return (\n        <>\n            <Container maxWidth={'md'} style={{paddingTop: 16, paddingBottom: 16}}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Typography variant={'h4'} style={{textAlign: 'center'}}>Times Up!</Typography>\n                    </Grid>\n                </Grid>\n            </Container>\n            <Toolbar/>\n            <AppBar position={\"fixed\"} style={{top: 'auto', bottom: 0}} color={'white'}>\n                <Toolbar style={{display: 'flex'}}>\n                    <div style={{flex: 1}}></div>\n                    <Button style={{flex: 1}} color={'error'} variant={'contained'}\n                            onClick={handleReturnToLobby}>End</Button>\n                </Toolbar>\n            </AppBar>\n        </>\n    )\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport HomePage from \"./Pages/HomePage\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TheGamePage from \"./Pages/TheGamePage\";\n\nfunction App() {\n    return (\n        <Router>\n            <CssBaseline />\n            <Route path={\"/\"} exact component={HomePage} />\n            <Route path={\"/game\"} exact component={TheGamePage} />\n            {/*<Route path={\"/game/admin\"} exact component={GameAdminPage} />*/}\n        </Router>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}